// Simple pop-up menu
// (c) 2024 Ross Younger

import { VerticalBox, StandardListView, HorizontalBox } from "std-widgets.slint";

export struct MenuItem {
    display: string, // What to display (may be translated)
    callback: string, // This string is sent to the 'selected' callback. If not set, sends 'display' instead.
    disabled: bool, // Set to true to make this a non-functional item
}

export component Menu inherits PopupWindow {
    // caller sets x,y appropriately
    // caller may set z if needed
    // caller should set or bind visible as desired

    in property <[MenuItem]> items;
    callback selected(string);

    in property <string> font-family;
    in property <length> font-size: 14px;
    in property <brush> text-colour: #111;
    in property <brush> disabled-text-colour: #bbb;
    in property <brush> background: #fff;
    in property <brush> hovering: #999;

    z: 10;

    layout := VerticalLayout {
        for item in items: TouchArea {
            Rectangle {
                background: !item.disabled && parent.has-hover ? root.hovering : root.background;
                HorizontalLayout {
                    padding: root.font-size * 0.5;
                    Text {
                        text: item.display;
                        font-family: root.font-family;
                        font-size: root.font-size;
                        color: item.disabled ? root.disabled-text-colour : root.text-colour;
                    }
                }
            }
            clicked => {
                if !item.disabled {
                    root.selected(item.callback == "" ? item.display : item.callback);
                }
            }
        }
    }
}
