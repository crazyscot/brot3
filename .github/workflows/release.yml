# This is based on tauri-action publish-to-auto-release.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.

name: publish

on:
  push:
    branches:
      - release
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          #cache: yarn
          #cache-dependency-path: ui/yarn.lock
      - name: dtolnay/rust-toolchain@stable (non-macos)
        uses: dtolnay/rust-toolchain@stable
        if: matrix.platform != 'macos-latest'
      - name: dtolnay/rust-toolchain@stable (macos)
        uses: dtolnay/rust-toolchain@stable
        if: matrix.platform == 'macos-latest'
        with:
          targets: aarch64-apple-darwin, x86_64-apple-darwin
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "tauri-${{matrix.platform}}" # aligns with ci.yml
          save-if: false
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends mold libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf
          
      - run: yarn install --immutable
        working-directory: ui

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ui
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "brot3 v__VERSION__"
          releaseBody: |
            Choose the appropriate version for your platform:
            - .AppImage: Linux (standalone; simply give it execute permission and run)
            - .deb: Debian/Ubuntu package (built on Ubuntu 22.04)
            - .dmg: MacOS 10.13+
            - .msi: Windows 10+ Installer
          releaseDraft: true
          prerelease: false
          # On MacOS, explicitly specify target
          # On all platforms, build with --frozen
          args: |
            ${{ (matrix.platform == 'macos-latest' && '--target universal-apple-darwin') || '' }}
            -- -- --frozen
