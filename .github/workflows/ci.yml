name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    strategy:
      matrix:
        platform: [ubuntu-22.04]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: sudo apt-get update && sudo apt-get -y --no-install-recommends install curl wget file mold libwebkit2gtk-4.0-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
    - name: Code style check
      run: cargo fmt --all -- --check
    # we used to use actions/cache@v4
    - name: Build
      run: cargo build --all-targets
    # we want to ensure the benches build... but we already do that in debug with --all-targets
    - name: Test
      run: cargo test
    - name: Lint
      # N.B. --all-features doesn't build; we're not using tauri custom-protocol
      run: cargo clippy --all-targets

  tauri:
    #needs: rust # overlaps a little, but different profile so there's no cache win
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-22.04]
        #platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: ui/yarn.lock
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2 # wry added
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends mold libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: yarn install --immutable
        working-directory: ui

      # If tagName and releaseId are omitted tauri-action will only build the app and won't try to upload any asstes.
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ui
